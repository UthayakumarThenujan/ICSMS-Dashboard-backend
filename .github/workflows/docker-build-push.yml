##name: Build, Push, and Deploy Docker Image
##
##on:
##  push:
##    branches:
##      - master
##
##jobs:
##  build:
##    runs-on: ubuntu-latest
##
##    steps:
##      - name: Checkout repository
##        uses: actions/checkout@v3
##
##      - name: Bump version and push tag
##        id: create_tag
##        uses: mathieudutour/github-tag-action@v5
##        with:
##          github_token: ${{ secrets.GH_TOKEN }}
##          default_bump: patch
##
##      - name: Print new tag
##        run: echo "New tag is ${{ steps.create_tag.outputs.new_tag }}"
##
##      - name: Update Dockerrun.aws.json
##        run: |
##          sed -i 's|<DOCKER_IMAGE>|${{ secrets.DOCKER_USERNAME }}/my-app:${{ steps.create_tag.outputs.new_tag }}|g' Dockerrun.aws.json
##
##
##      - name: Set up Docker Buildx
##        uses: docker/setup-buildx-action@v2
##
##      - name: Log in to Docker Hub
##        uses: docker/login-action@v2
##        with:
##          username: ${{ secrets.DOCKER_USERNAME }}
##          password: ${{ secrets.DOCKER_PASSWORD }}
##
##      - name: Set up QEMU
##        uses: docker/setup-qemu-action@v2
##
##      - name: Build and push Docker image
##        uses: docker/build-push-action@v4
##        with:
##          context: .
##          push: true
##          tags: ${{ secrets.DOCKER_USERNAME }}/icsms-auth:${{ steps.create_tag.outputs.new_tag }}
##          platforms: linux/arm64
##
##      - name: Logout from Docker Hub
##        run: docker logout
##
##
#
#
#name: Build, Push, and Deploy Docker Image
#
#on:
#  push:
#    branches:
#      - main
#
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
##      - name: Bump version and push tag
##        id: create_tag
##        uses: mathieudutour/github-tag-action@v5
##        with:
##          github_token: ${{ secrets.GH_TOKEN }}
##          default_bump: patch
#
##      - name: Print new tag
##        run: echo "New tag is ${{ steps.create_tag.outputs.new_tag }}"
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Log in to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v2
#
#      - name: Build and push Docker image(chart api)
#        uses: docker/build-push-action@v4
#        with:
#          context: ./Charts(8002)
#          push: true
#          tags: ${{ secrets.DOCKER_USERNAME }}/icsms-chart-api:latest
#          platforms: linux/arm64
#
#      - name: Build and push Docker image
#        uses: docker/build-push-action@v4
#        with:
#          context: ./Notifications(8000)
#          push: true
#          tags: ${{ secrets.DOCKER_USERNAME }}/icsms-notifications-api:latest
#          platforms: linux/arm64
#
#      - name: Build and push Docker image
#        uses: docker/build-push-action@v4
#        with:
#          context: ./ReciveAPI
#          push: true
#          tags: ${{ secrets.DOCKER_USERNAME }}/icsms-recieve-api:latest
#          platforms: linux/arm64
#
#      - name: Logout from Docker Hub
#        run: docker logout
#


name: Build, Push, and Deploy Docker Image

on:
  push:
    branches:
      - main

jobs:
  build_chart_api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Build and push Docker image(chart api)
        uses: docker/build-push-action@v4
        with:
          context: ./Charts(8002)
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/icsms-chart-api:latest
          platforms: linux/arm64

  build_notifications_api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./Notifications(8000)
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/icsms-notifications-api:latest
          platforms: linux/arm64

  build_recieve_api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./ReciveAPI
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/icsms-recieve-api:latest
          platforms: linux/arm64

      - name: Logout from Docker Hub
        run: docker logout